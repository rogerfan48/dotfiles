source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=1,bold #red,bold
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=205 #207
# ZSH_HIGHLIGHT_STYLES[alias]=fg=2 #083
# ZSH_HIGHLIGHT_STYLES[builtin]=fg=2 #083
# ZSH_HIGHLIGHT_STYLES[function]=fg=2 #083
# ZSH_HIGHLIGHT_STYLES[command]=fg=2 #083
# ZSH_HIGHLIGHT_STYLES[precommand]=fg=2,underline #083
ZSH_HIGHLIGHT_STYLES[commandseparator]=fg=205 #207
ZSH_HIGHLIGHT_STYLES[hashed-command]=fg=205 #207
ZSH_HIGHLIGHT_STYLES[path]=fg=4,underline #087
ZSH_HIGHLIGHT_STYLES[globbing]=none
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=141
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=141
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=fg=141
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=3 #228
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=3 #228 
ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]=fg=80
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=80
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=80
ZSH_HIGHLIGHT_STYLES[redirection]=fg=80
ZSH_HIGHLIGHT_STYLES[assign]=fg=80
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=fg=242

# ZSH_HIGHLIGHT_STYLES[default]=none
# ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=160,bold #red,bold
# ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=200 #207
# ZSH_HIGHLIGHT_STYLES[alias]=fg=2 #083
# ZSH_HIGHLIGHT_STYLES[builtin]=fg=2 #083
# ZSH_HIGHLIGHT_STYLES[function]=fg=2 #083
# ZSH_HIGHLIGHT_STYLES[command]=fg=2 #083
# ZSH_HIGHLIGHT_STYLES[precommand]=fg=2,underline #083
# ZSH_HIGHLIGHT_STYLES[commandseparator]=fg=200 #207
# ZSH_HIGHLIGHT_STYLES[hashed-command]=fg=200 #207
# ZSH_HIGHLIGHT_STYLES[path]=fg=081,underline #087
# ZSH_HIGHLIGHT_STYLES[globbing]=none
# ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=blue
# ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=fg=141
# ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=fg=141
# ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=fg=141
# ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=220 #228
# ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=220 #228 
# ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]=fg=44
# ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=44
# ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=44
# ZSH_HIGHLIGHT_STYLES[redirection]=fg=44
# ZSH_HIGHLIGHT_STYLES[assign]=fg=44


bindkey '^[[OPT-RIGHT]' forward-word # Alt-Right
bindkey '^[[OPT-LEFT]' backward-word # Alt-Left
bindkey '^[[OPT-BACKSPACE]' backward-kill-word
bindkey '^[[CMD-BACKSPACE]' backward-kill-line


export LANG=en_US.UTF-8 # !!! zh_TW.UTF-8source /opt/homebrew/opt/powerlevel10k/powerlevel10k.zsh-theme

function mysass() {
    # if only 1 argu: compile ${1}/scss/style.scss to ${1}/css/style.min.css in compressed mode
    # if have 2 augu: just compile ${1} to ${2} in compressed mode
    if [ -z $2 ]
    then
        sass -w -s 'compressed' --no-source-map --verbose ${1}/scss/style.scss:${1}/css/style.min.css
    else
        sass -w -s 'compressed' --no-source-map --verbose $1:$2
    fi
}

function mytree() {
    # to print out zh_TW instead of <?>
    # just use it as usual
    tree -N $1 $2 $3 $4 $5 $6 $7 $8 $9 ${10}
}

function kb() {
    echo "current jobs:"
    jobs
    read "userInput?Are You Sure To Kill Jobs from 1 to 10? (y/n): "
    if [[ "$userInput" == "y" || "$userInput" == "Y" ]]; then
        kill %1 %2 %3 %4 %5 %6 %7 %8 %9 %10
        echo "successfully killed jobs from 1 to 10!"
    elif [[ "$userInput" == "n" || "$userInput" == "N" ]]; then
        echo "Operation Canceled."
    else
        echo "Invalid input. Please enter 'y' or 'n'."
    fi
}
